- name: Setup Tomcat8 & Deploy Artifact
  hosts: appsrvgrp
  become: yes
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"

  tasks:
  - name: Get the latest version of the artifact from Nexus
    uri:
      url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/service/rest/v1/search/assets?repository={{reponame}}&group={{groupid}}&name={{artifactid}}"
      method: GET
      return_content: yes
      status_code: 200
    register: nexus_response
    tags:
    - deploy

  - name: Parse the latest version from Nexus response
    set_fact:
      latest_version: "{{ nexus_response.json.items | sort(attribute='lastModified') | last }}"
    tags:
    - deploy

  - name: Debug the latest version details
    debug:
      msg: "{{ latest_version }}"
    tags:
    - deploy

  - name: Download latest VProfile.war from nexus
    get_url:
      url: "{{ latest_version.downloadUrl }}"
      dest: "/tmp/vproapp-{{ latest_version.path | basename }}"
    register: wardeploy
    tags:
    - deploy

  - stat:
      path: /usr/local/tomcat8/webapps/ROOT
    register: artifact_stat
    tags:
    - deploy

  - name: Stop tomcat svc
    service:
      name: tomcat
      state: stopped
    tags:
    - deploy

  - name: Try Backup and Deploy
    block:
    - name: Archive ROOT dir with timestamp
      archive:
        path: /usr/local/tomcat8/webapps/ROOT
        dest: "/opt/ROOT_{{timestamp}}.tgz"
      when: artifact_stat.stat.exists
      register: archive_info
      tags:
      - deploy

    - name: Copy ROOT dir with old_ROOT name
      shell: cp -r ROOT old_ROOT
      args:
        chdir: /usr/local/tomcat8/webapps/

    - name: Delete current artifact
      file:
        path: "{{ item }}"
        state: absent
      when: archive_info.changed
      loop:
      - /usr/local/tomcat8/webapps/ROOT
      - /usr/local/tomcat8/webapps/ROOT.war
      tags:
      - deploy

    - name: Try deploy artifact else restore from previous old_ROOT
      block:
      - name: Deploy vprofile artifact
        copy:
          src: "/tmp/vproapp-{{ latest_version.path | basename }}"
          dest: /usr/local/tomcat8/webapps/ROOT.war
          remote_src: yes
        register: deploy_info
        tags:
        - deploy
      rescue:
      - shell: cp -r old_ROOT ROOT
        args:
          chdir: /usr/local/tomcat8/webapps/

    rescue:
    - name: Start tomcat svc
      service:
        name: tomcat
        state: started

  - name: Start tomcat svc
    service:
      name: tomcat
      state: started
    when: deploy_info.changed
    tags:
    - deploy

  - name: Wait until ROOT.war is extracted to ROOT directory
    wait_for:
      path: /usr/local/tomcat8/webapps/ROOT
    tags:
    - deploy
